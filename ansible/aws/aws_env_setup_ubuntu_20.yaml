- name : Configure aws-cli and required packages and deploy and execute the payload
  become: true
  become_method: sudo
  hosts: all
  gather_facts: no
  force_handlers: True
  tasks:
  - block:
    - name: Install Python3.6
      shell: "sudo apt-get update"
    - name: Install Python3.6
      shell: "sudo apt-get install python3.6"  
    - name: Install GCC
      apt:
        name: gcc
        state: latest
    - name: Install python36-devel
      apt:
        name: python3-pip
        state: latest 
    - name: Upgrade to AWS linux kernel
      apt:
        name: linux-aws-lts-20.04
        state: latest 
    rescue:
    - name: Update apt.. older way
      shell: "sudo apt update -y"
    - name: Install Python-devel.. older way
      shell: "sudo apt install python3 python3-pip -y"
    - name: Install GCC .. older way
      shell: "sudo apt install gcc -y"
    - name: Upgrade to AWS linux kernel
      shell: "sudo apt install linux-aws-lts-18.04 -y"
    tags:
        - devel
  # - name: Install pip
  #   shell: "sudo apt install pip -y"
  - block:
    - name: Install and upgrade pip
      pip:
        name: pip
        extra_args: --upgrade
        executable: pip3
    - name: Install Python packages
      pip:
        name: "{{ item }}"
        executable: pip3
      with_items:
        - awscli
        - netifaces
        - netaddr
        - mongoengine
        - psutil
        - python-dotenv
        - dnspython
        - requests
    rescue:
    - name: Install python packages
      shell: "sudo pip3 install {{ item }}"
      with_items:
        - awscli
        - netifaces
        - netaddr
        - mongoengine
        - psutil
        - python-dotenv
        - dnspython
        - requests


  - name: Create .aws directory
    file:
      path: "~/.aws/"
      state: directory
      mode: 0755

  - name: Configure awscli credentials
    copy:
      src: "~/.aws/credentials"
      dest: "~/.aws/credentials"

  - name: Configure aws region
    copy:
      src: "~/.aws/config"
      dest: "~/.aws/config"

  - name: <==Deploy payload==>
    copy:
      src: "../payloads/footprint.py"
      dest: "/tmp/footprint.py"
    tags:
      - deploy

  - name: <==Executing payload==>
    shell: "python3 /tmp/footprint.py {{ project }} '{{ mongodb }}' {{ inventory_hostname }}"
    register: st
    become: True
    tags:
      - exec

  - name: Debug
    debug:
      var: st
    tags:
      - msg